name: zimbabwe_gold_exchange_rates

services:
  web_prod:
    container_name: zger_web_prod
    image: icep0ops/zger_web_prod
    build:
      context: .
      dockerfile: web/Dockerfile.prod
    expose:
      - "80"
    env_file:
      - ./web/.env.production
    environment:
      NODE_ENV: production
    restart: unless-stopped
    depends_on:
      api_prod:
        condition: service_healthy

  api_prod:
    container_name: zger_api_prod
    image: icep0ops/zger_api_prod
    build:
      context: ./api
      dockerfile: Dockerfile.prod
    expose:
      - "3001"
    env_file:
      - ./database/.env.production
      - ./api/.env
    environment:
      NODE_ENV: production
    restart: unless-stopped
    depends_on:
      database_prod:
        condition: service_healthy
    healthcheck:
      test:
        ["CMD", "curl", "-f", "-s", "http://localhost:3001/api/v1/currencies"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  database_prod:
    container_name: zger_db_prod
    image: icep0ops/zger_db_prod
    build:
      context: ./database
    volumes:
      - zbr-postgres-data-prod:/var/lib/postgresql/data
    env_file:
      - ./database/.env.production
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d zger"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  watchtower:
    image: containrrr/watchtower
    container_name: zger_watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 300
    restart: unless-stopped

  nginx:
    container_name: zger_nginx
    image: nginx:stable-alpine
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/www/certbot:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    depends_on:
      - web_prod
      - api_prod
    restart: unless-stopped

volumes:
  zbr-postgres-data-prod:
